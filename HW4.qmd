---
title: "HW4"
author: "Sanjay Poudel"
date: last-modified
execute: 
  eval: true
  warning: False
  message: False
format:
  html:
    toc: true
editor_options: 
  chunk_output_type: console
---

### Load Required Libraries and Files

```{r}
library("here")
library("terra")
library("sf")
library("tmap")
library("kableExtra")
library("dplyr")
```

```{r}
#load required files
filepath <- here::here("data")

depth <- rast(here::here("data", "depth.tif"))
eec <- read_sf(here::here("data","wc_regions_clean.shp"))

sst_files <- list.files(filepath, pattern = "annual.*\\.tif$", full.names = TRUE)

sst <- rast(sst_files)
```

### Data Preprocessing

```{r}
#check the crs compatibility of depth and crs files and change if needed

if (st_crs(depth) == st_crs(eec)) {
  print("depth and eec files have the same coordinate system")
} else {
    eec <- st_transform(eec, crs = st_crs(depth))
}
```

```{r}
#check the crs compatibility of depth and sst files and change if needed

if (crs(depth) == crs(sst)) {
  print("depth and sst rasters have the save coordinate system")
} else {
    warning("Changing the CRS of sst file")
    sst <- project(sst, crs(depth))
}
```

```{r}
#caclulate the average sst in celsius

avg_sst <- mean(sst) - 273.15
```

```{r}
#check the name of the raster

names(avg_sst)
```

```{r}
#rename the raster

names(avg_sst) <- "avg_sst"
```

```{r}
#check the extent of the depth and avg_sst raster

print(ext(depth))
print(ext(avg_sst))
```

```{r}
#crop the depth raster to match the extent of the avg_sst raster

depth <- crop(depth, avg_sst)
```

```{r}
#check the resolution of the depth and avg_sst raster

print(res(depth))
print(res(avg_sst))
```

```{r}
#resample the depth raster to match the resolution of the avg_sst raster

depth <- resample(depth, avg_sst, method = "near")
```

```{r}
#check if the depth and avg_sst rasters have matching extent and resolution by combining them

combined_rast = c(depth, avg_sst)
```

```{r}
#Rasterize the eec shp file

eec_vect <- vect(eec)

eec_raster <- rasterize(eec_vect, depth, field = "rgn_id")

# Plot the result to confirm
plot(eec_raster, main = "Rasterized EEC")
```

```{r}
perform_suitability_analysis <- function(avg_sst, depth, eec_raster, temp_range, depth_range, region_names, species_name) {
  
  # Reclassify SST and Depth based on suitability conditions
  sst_layer <- classify(avg_sst, rcl = matrix(
    c(-Inf, temp_range[1], 0, temp_range[1], temp_range[2], 1, temp_range[2], Inf, 0), 
    ncol = 3, byrow = TRUE
  ))
  
  depth_layer <- classify(depth, rcl = matrix(
    c(-Inf, -depth_range[2], 0, -depth_range[2], -depth_range[1], 1, -depth_range[1], Inf, 0), 
    ncol = 3, byrow = TRUE
  ))
  
  # Combine the layers to create a suitability map
  suitability_layer <- sst_layer * depth_layer
  
  # Assign regions to suitable areas using EEZ raster
  regions <- suitability_layer * eec_raster
  
  # Convert raster to polygons and add region names
  regions_vec <- regions %>%
    as.polygons() %>%
    st_as_sf() %>%
    filter(!is.na(avg_sst) & avg_sst != 0) %>%
    mutate(region = region_names)
  
  # Calculate and rank the regions by suitable area
  areas <- cellSize(regions, unit = "m")  # Cell area in square meters
  area_by_value <- list()
  
  for (value in 1:length(region_names)) {
    mask_r <- regions == value
    total_area <- sum(values(areas * mask_r), na.rm = TRUE)
    area_by_value[[as.character(value)]] <- total_area
  }
  
  calculated_areas <- round(unlist(area_by_value) / 1e6)  # Convert to sq. km
  
  results_df <- data.frame(
    SN = 1:length(region_names),
    Region = region_names,
    Total_Area_km2 = calculated_areas,
    stringsAsFactors = FALSE
  )
  
  results_df <- results_df[order(-results_df$Total_Area_km2), ]  # Sort by area
  results_df$SN <- 1:nrow(results_df)  # Reassign serial numbers
  
  colnames(results_df)[2] <- "Exclusive Economic Zones"
  colnames(results_df)[3] <- "Total Suitable Area (sq. km)"  # Rename columns
  
  # Create the map
  tmap_mode("view")
  map <- tm_shape(regions_vec) +
    tm_polygons(
      col = "region",
      title = "EEZ"
    ) +
    tm_layout(
      title = paste("Suitable Areas for", species_name, "Farming along the West Coast of the USA by EEZ")
    ) +
    tm_view(view.legend.position = c("right", "bottom"))
  
  # Print the map and return the table
  #print(map)  # Ensure the map is rendered in the R console or R Markdown
  
  table_html <- results_df %>%
    kable(
      "html", 
      caption = paste("Ranked EEZ for", species_name, "Farming Along the West Coast of the USA based on Suitable Area (sq. km)"), 
      row.names = FALSE
    ) %>%
    kable_styling("striped", full_width = FALSE)
  
  # Return a list containing both the table and the map
  return(list(
    table = table_html,
    map = map
  ))
}
```

```{r}
# For Oysters
oyster_output <- perform_suitability_analysis(
  avg_sst = avg_sst, 
  depth = depth, 
  eec_raster = eec_raster, 
  temp_range = c(11, 30), 
  depth_range = c(0, 70), 
  region_names = c("Oregon", "Northern California", "Central California", "Southern California", "Washington"), 
  species_name = "Oysters"
)

oyster_output$map
oyster_output$table
```

```{r}
# For Pacific Geoduck
geoduck_output <- perform_suitability_analysis(
  avg_sst = avg_sst, 
  depth = depth, 
  eec_raster = eec_raster, 
  temp_range = c(8.3, 12.8), 
  depth_range = c(0, 110), 
  region_names = c("Oregon", "Northern California", "Central California", "Southern California", "Washington"), 
  species_name = "Pacific Geoduck"
)

geoduck_output$map
geoduck_output$table
```
### Data Source:

1.  Sea Surface Temperature: <https://coralreefwatch.noaa.gov/product/5km/index_5km_ssta.php>
2.  Bathymetry: <https://www.gebco.net/data_and_products/gridded_bathymetry_data/#area>
3.  Exclusive Economic Zones:\
    <https://www.marineregions.org/eez.php>
4.  Suitable Conditions for Sea Life: <https://www.sealifebase.ca/search.php>